class MinStack {

    Stack<Integer> stack ;
    Stack<Integer> mini;
    /** initialize your data structure here. */
    public MinStack() {
        stack = new Stack<Integer>();
        mini = new Stack<Integer>();
    }
    
    public void push(int x) {
        stack.push(x);
        if(mini.isEmpty()){
            mini.push(x);
        } else if(mini.peek() >= x){
            mini.push(x);
        }
    }
    
    public void pop() {
        int element = stack.pop();
        if(mini.peek() == element){
            mini.pop();
        }
    }
    
    public int top() {
       return stack.peek();
    }
    
    public int getMin() {
        return mini.peek();
    }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(x);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 * 
 * What to design : 
 * push(x) -- Push element x onto stack.
 * pop() -- Removes the element on top of the stack.
 * top() -- Get the top element.
 * getMin() -- Retrieve the minimum element in the stack in O(1)

 */